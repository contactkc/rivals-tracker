package com.rivals_tracker.backend;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

@RestController
@RequestMapping("/api/proxy")
public class ApiProxyController {

    private final RestTemplate restTemplate = new RestTemplate();
    private static final String API_BASE_URL = "https://marvelrivalsapi.com/api/v1/";

    @Value("${rivals.api.key}")
    private String apiKey;

    private HttpEntity<String> createRequestEntity() {
        HttpHeaders headers = new HttpHeaders();
        headers.set("x-api-key", apiKey);
        return new HttpEntity<>(headers);
    }

    @GetMapping("/player/{username}")
    public ResponseEntity<?> getPlayer(@PathVariable String username) {
        try {
            String url = API_BASE_URL + "player/" + username;
            ResponseEntity<String> response = restTemplate.exchange(
                url, HttpMethod.GET, createRequestEntity(), String.class
            );
            return ResponseEntity.ok(response.getBody());
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Error: " + e.getMessage());
        }
    }

    @GetMapping("/heroes")
    public ResponseEntity<?> getHeroes() {
        try {
            String url = API_BASE_URL + "heroes";
            ResponseEntity<String> response = restTemplate.exchange(
                url, HttpMethod.GET, createRequestEntity(), String.class
            );
            return ResponseEntity.ok(response.getBody());
        } catch (Exception e) {
            return ResponseEntity.badRequest().body("Error: " + e.getMessage());
        }
    }
}